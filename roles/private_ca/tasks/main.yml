---
- name: Build consolidated DNS list
  ansible.builtin.set_fact:
    private_ca_all_dns: >-
      {{ (private_ca_dns_names + private_ca_extra_dns) | unique }}

- name: Ensure project directories exist
  ansible.builtin.file:
    path: "{{ private_ca_project_path }}/{{ item }}"
    state: directory
    mode: '0750'
  loop: "{{ private_ca_data_subdirs }}"

- name: Write private CA password file
  ansible.builtin.copy:
    dest: "{{ private_ca_password_file }}"
    content: "{{ private_ca_password | mandatory }}\n"
    mode: '0600'

- name: Initialize step-ca configuration if missing
  ansible.builtin.command: >-
    docker run --rm --pull=never \
      -v {{ private_ca_project_path }}/config:/home/step/config \
      -v {{ private_ca_project_path }}/secrets:/home/step/secrets \
      -v {{ private_ca_project_path }}/db:/home/step/db \
      -e STEP_CA_PASSWORD={{ private_ca_password | mandatory }} \
      {{ private_ca_image }} \
      step ca init --deployment-type standalone \
        --name "{{ private_ca_name }}" \
        --dns "{{ private_ca_hostname }}" \
        --address ":{{ private_ca_port }}" \
        --provisioner "{{ private_ca_provisioner }}" \
        --password-file /home/step/secrets/password.txt \
        --acme
  args:
    creates: "{{ private_ca_config_path }}"

- name: Deploy step-ca configuration template
  ansible.builtin.template:
    src: step-ca-config.json.j2
    dest: "{{ private_ca_config_path }}"
    mode: '0644'

- name: Deploy private CA service
  community.docker.docker_compose_v2:
    project_name: private_ca
    definition:
      version: '3.9'
      services:
        "{{ private_ca_service_name }}":
          image: "{{ private_ca_image }}"
          pull_policy: never
          container_name: "{{ private_ca_service_name }}"
          restart: unless-stopped
          environment:
            STEP_CA_PASSWORD: >-
              {{ private_ca_password | mandatory }}
          volumes:
            - >-
              {{ private_ca_project_path }}/config:/home/step/config
            - >-
              {{ private_ca_project_path }}/secrets:/home/step/secrets
            - >-
              {{ private_ca_project_path }}/db:/home/step/db
          ports:
            - "{{ private_ca_port }}:{{ private_ca_port }}"
          healthcheck:
            test:
              - CMD-SHELL
              - step --help >/dev/null 2>&1
            interval: 30s
            timeout: 10s
            retries: 5
          networks:
            - "{{ infra_network_name }}"
      networks:
        "{{ infra_network_name }}":
          external: true

- name: Wait for root certificate to appear
  ansible.builtin.wait_for:
    path: "{{ private_ca_root_cert_path }}"
    timeout: 120

- name: Read root certificate content
  ansible.builtin.slurp:
    src: "{{ private_ca_root_cert_path }}"
  register: private_ca_root_ca

- name: Ensure branding directory exists on control host
  ansible.builtin.file:
    path: "{{ private_ca_branding_cert | dirname }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  run_once: true

- name: Copy root certificate to branding assets
  ansible.builtin.copy:
    dest: "{{ private_ca_branding_cert }}"
    content: "{{ private_ca_root_ca.content | b64decode }}"
    mode: '0644'
  delegate_to: localhost
  run_once: true
