---
- name: Fail if unsupported OS family
  ansible.builtin.assert:
    that:
      - ansible_os_family in ['Debian']
    fail_msg: "Currently only Debian/Ubuntu family is supported."

- name: Set timezone
  community.general.timezone:
    name: "{{ timezone }}"

- name: Install prerequisites
  ansible.builtin.apt:
    name: [ca-certificates, curl, gnupg, lsb-release]
    state: present
    update_cache: true
  when: ansible_os_family == 'Debian'

- name: Ensure Docker apt keyring directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when: ansible_os_family == 'Debian'

- name: Add Docker GPG key
  ansible.builtin.shell: |
    set -o pipefail
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
      | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
    executable: /bin/bash
  when: ansible_os_family == 'Debian'

- name: Resolve Docker architecture
  ansible.builtin.set_fact:
    docker_repo_arch: >-
      {{ docker_arch_map.get(
        ansible_architecture | default('amd64'),
        ansible_architecture | default('amd64')
      ) }}

- name: Render Docker repository definition
  ansible.builtin.template:
    src: docker.list.j2
    dest: /etc/apt/sources.list.d/docker.list
    owner: root
    group: root
    mode: '0644'
  when: ansible_os_family == 'Debian'

- name: Install Docker Engine
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true
  when: ansible_os_family == 'Debian'

- name: Ensure docker service enabled
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Ensure shared Docker network exists
  community.docker.docker_network:
    name: "{{ docker_infra_network }}"
    state: present
