---
- name: Configure APT to force IPv4 when requested
  ansible.builtin.copy:
    dest: "{{ docker_apt_force_ipv4_path }}"
    content: "Acquire::ForceIPv4 \"true\";\n"
    owner: root
    group: root
    mode: '0644'
  when: force_ipv4_for_apt | bool

- name: Remove APT IPv4 override when not required
  ansible.builtin.file:
    path: "{{ docker_apt_force_ipv4_path }}"
    state: absent
  when: not (force_ipv4_for_apt | bool)

- name: Install prerequisite packages for Docker
  ansible.builtin.apt:
    name: "{{ docker_required_packages }}"
    state: present
    update_cache: true
  when: docker_required_packages | length > 0

- name: Ensure Docker keyring directory exists
  ansible.builtin.file:
    path: "{{ docker_keyring_path | dirname }}"
    state: directory
    mode: '0755'
  when: use_official_docker_repo | bool

- name: Download Docker repository key
  ansible.builtin.get_url:
    url: "{{ docker_apt_gpg_key_url }}"
    dest: "{{ docker_keyring_path }}"
    mode: '0644'
  when: use_official_docker_repo | bool

- name: Configure Docker APT repository
  ansible.builtin.apt_repository:
    repo: "{{ docker_repository }}"
    filename: "{{ docker_repository_filename }}"
    state: present
  when: use_official_docker_repo | bool

- name: Remove Docker APT repository when disabled
  ansible.builtin.file:
    path: "/etc/apt/sources.list.d/{{ docker_repository_filename }}.list"
    state: absent
  when: not (use_official_docker_repo | bool)

- name: Remove Docker repository key when disabled
  ansible.builtin.file:
    path: "{{ docker_keyring_path }}"
    state: absent
  when: not (use_official_docker_repo | bool)

- name: Determine Docker packages to install
  ansible.builtin.set_fact:
    docker_packages_effective: >-
      {{
        (
          (use_official_docker_repo | bool)
          | ternary(docker_official_packages, docker_default_packages)
        ) + docker_additional_packages
        | unique
      }}

- name: Install Docker packages
  ansible.builtin.apt:
    name: "{{ docker_packages_effective }}"
    state: "{{ docker_package_state }}"
    update_cache: true
  notify: Restart Docker

- name: Ensure Docker service is enabled and running
  ansible.builtin.service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
