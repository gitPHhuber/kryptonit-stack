---
- name: Determine Docker repository preference
  ansible.builtin.set_fact:
    docker_use_official_repo_effective: >-
      {{ use_official_docker_repo | default(docker_use_official_repo) | bool }}
  tags:
    - docker

- name: Install prerequisites for Docker repository
  when: docker_use_official_repo_effective
  ansible.builtin.apt:
    name: "{{ docker_required_packages }}"
    state: present
    update_cache: false
  register: docker_repo_prereqs
  retries: "{{ apt_retries | default(3) | int }}"
  delay: 5
  until: docker_repo_prereqs is succeeded
  tags:
    - docker

- name: Ensure Docker apt keyring directory exists
  when: docker_use_official_repo_effective
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  tags:
    - docker

- name: Download Docker repository GPG key
  when: docker_use_official_repo_effective
  ansible.builtin.get_url:
    url: "{{ docker_repo_key_url }}"
    dest: /etc/apt/keyrings/docker.gpg
    mode: '0644'
    timeout: "{{ apt_timeout_sec | default(20) }}"
  register: docker_repo_key_download
  retries: "{{ apt_retries | default(3) | int }}"
  delay: 5
  until: docker_repo_key_download is succeeded
  tags:
    - docker

- name: Configure Docker apt repository
  when: docker_use_official_repo_effective
  ansible.builtin.apt_repository:
    repo: "{{ docker_repo_url }}"
    filename: docker
    state: present
  tags:
    - docker

- name: Install Docker Engine from official repository
  when: docker_use_official_repo_effective
  ansible.builtin.apt:
    name: "{{ docker_packages_official }}"
    state: "{{ docker_package_state }}"
    update_cache: true
  register: docker_official_install
  retries: "{{ apt_retries | default(3) | int }}"
  delay: 5
  until: docker_official_install is succeeded
  tags:
    - docker

- name: Remove Docker official repository when disabled
  when: not docker_use_official_repo_effective
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent
  tags:
    - docker

- name: Install docker.io from Ubuntu repo
  when: not docker_use_official_repo_effective
  ansible.builtin.apt:
    name: "{{ docker_distro_package }}"
    state: "{{ docker_package_state }}"
    update_cache: true
  register: docker_distro_install
  retries: "{{ apt_retries | default(3) | int }}"
  delay: 5
  until: docker_distro_install is succeeded
  tags:
    - docker

- name: Ensure docker service is enabled and started
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  tags:
    - docker

- name: Ensure docker users are in group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  loop: "{{ docker_users }}"
  when: docker_users | length > 0
  tags:
    - docker

- name: Install docker-compose-v2 if available
  ansible.builtin.apt:
    name: docker-compose-v2
    state: present
  register: docker_compose_v2_install
  failed_when: false
  changed_when: docker_compose_v2_install.rc | default(0) == 0
  tags:
    - docker

- name: Install docker-compose via pip fallback
  when: docker_compose_v2_install.rc | default(1) != 0
  tags:
    - docker
  block:
    - name: Install python3-pip package
      ansible.builtin.apt:
        name: python3-pip
        state: present
      register: docker_pip_pkg
      retries: "{{ apt_retries | default(3) | int }}"
      delay: 5
      until: docker_pip_pkg is succeeded

    - name: Install docker-compose via pip3
      ansible.builtin.pip:
        name: docker-compose
        executable: pip3

    - name: Ensure Docker CLI plugins directory exists
      ansible.builtin.file:
        path: "{{ docker_cli_plugin_dir }}"
        state: directory
        mode: '0755'

    - name: Create docker compose shim
      ansible.builtin.copy:
        dest: "{{ docker_compose_shim_path }}"
        mode: '0755'
        content: |
          #!/usr/bin/env bash
          exec {{ docker_compose_shim_target }} "$@"

- name: Verify docker compose command is available
  ansible.builtin.command: docker compose version
  register: docker_compose_check
  changed_when: false
  tags:
    - docker
