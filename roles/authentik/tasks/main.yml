---
- name: Ensure Authentik directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ authentik_project_path }}"
    - "{{ authentik_pg_data }}"
    - "{{ authentik_redis_data }}"
    - "{{ authentik_media }}"
    - "{{ authentik_templates }}"
    - "{{ authentik_geoip }}"

- name: Deploy Authentik stack
  community.docker.docker_compose_v2:
    project_name: authentik
    definition:
      version: '3.9'
      services:
        authentik-postgres:
          image: "{{ authentik_postgres_image }}"
          container_name: authentik-postgres
          restart: unless-stopped
          environment:
            POSTGRES_DB: "{{ authentik_db_name }}"
            POSTGRES_USER: "{{ authentik_db_user }}"
            POSTGRES_PASSWORD: "{{ authentik_db_password | mandatory }}"
          volumes:
            - "{{ authentik_pg_data }}:/var/lib/postgresql/data"
          healthcheck:
            test:
              - CMD-SHELL
              - >-
                pg_isready -U {{ authentik_db_user }}
            interval: 30s
            timeout: 10s
            retries: 5
          networks:
            - "{{ infra_network_name }}"

        authentik-redis:
          image: "{{ authentik_redis_image }}"
          container_name: authentik-redis
          restart: unless-stopped
          command:
            - redis-server
            - --requirepass
            - "{{ authentik_redis_password | mandatory }}"
          volumes:
            - "{{ authentik_redis_data }}:/data"
          healthcheck:
            test:
              - CMD-SHELL
              - >-
                redis-cli -a {{ authentik_redis_password | mandatory }}
                ping | grep PONG
            interval: 30s
            timeout: 10s
            retries: 5
          networks:
            - "{{ infra_network_name }}"

        authentik-server:
          image: "{{ authentik_images.server }}"
          container_name: authentik-server
          restart: unless-stopped
          command: ["server"]
          environment:
            AUTHENTIK_SECRET_KEY: >-
              {{ authentik_secret_key | mandatory }}
            AUTHENTIK_BOOTSTRAP_EMAIL: >-
              {{ authentik_bootstrap_email | default('admin@' + base_domain) }}
            AUTHENTIK_BOOTSTRAP_PASSWORD: >-
              {{ authentik_bootstrap_password | default('ChangeMe!123') }}
            AUTHENTIK_BOOTSTRAP_TOKEN: >-
              {{ authentik_bootstrap_token | default('') }}
            AUTHENTIK_REDIS__HOST: authentik-redis
            AUTHENTIK_REDIS__PASSWORD: >-
              {{ authentik_redis_password | mandatory }}
            AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
            AUTHENTIK_POSTGRESQL__PORT: "5432"
            AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_db_name }}"
            AUTHENTIK_POSTGRESQL__USER: "{{ authentik_db_user }}"
            AUTHENTIK_POSTGRESQL__PASSWORD: >-
              {{ authentik_db_password | mandatory }}
            AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
            AUTHENTIK_LOG_LEVEL: info
          volumes:
            - "{{ authentik_media }}:/media"
            - "{{ authentik_templates }}:/templates"
            - "{{ authentik_geoip }}:/geoip"
          expose:
            - "9000"
          depends_on:
            authentik-postgres:
              condition: service_healthy
            authentik-redis:
              condition: service_healthy
          healthcheck:
            test:
              - CMD-SHELL
              - >-
                python -c "import urllib.request; urllib.request.urlopen(
                'http://127.0.0.1:9000/-/health/ready')"
            interval: 30s
            timeout: 10s
            retries: 10
          networks:
            - "{{ infra_network_name }}"

        authentik-worker:
          image: "{{ authentik_images.worker }}"
          container_name: authentik-worker
          restart: unless-stopped
          command: ["worker"]
          environment:
            AUTHENTIK_SECRET_KEY: >-
              {{ authentik_secret_key | mandatory }}
            AUTHENTIK_REDIS__HOST: authentik-redis
            AUTHENTIK_REDIS__PASSWORD: >-
              {{ authentik_redis_password | mandatory }}
            AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
            AUTHENTIK_POSTGRESQL__PORT: "5432"
            AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_db_name }}"
            AUTHENTIK_POSTGRESQL__USER: "{{ authentik_db_user }}"
            AUTHENTIK_POSTGRESQL__PASSWORD: >-
              {{ authentik_db_password | mandatory }}
            AUTHENTIK_LOG_LEVEL: info
          volumes:
            - "{{ authentik_media }}:/media"
            - "{{ authentik_templates }}:/templates"
            - "{{ authentik_geoip }}:/geoip"
          depends_on:
            authentik-postgres:
              condition: service_healthy
            authentik-redis:
              condition: service_healthy
          networks:
            - "{{ infra_network_name }}"
          healthcheck:
            test:
              - CMD-SHELL
              - >-
                python -c "import urllib.request; urllib.request.urlopen(
                'http://authentik-server:9000/-/health/ready')"
            interval: 60s
            timeout: 10s
            retries: 10
      networks:
        "{{ infra_network_name }}":
          external: true
