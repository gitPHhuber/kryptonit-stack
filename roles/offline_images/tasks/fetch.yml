---
- name: Ensure offline image catalog is defined
  ansible.builtin.assert:
    that:
      - offline_images_catalog | length > 0
    fail_msg: |-
      offline_images_catalog is empty. Define the list of images in
      group_vars/all.yml.

- name: Validate offline image entries
  ansible.builtin.assert:
    that:
      - item.image is defined
      - item.archive is defined
    fail_msg: |-
      Each offline image must define both "image" and "archive" fields.
  loop: "{{ offline_images_catalog }}"
  loop_control:
    label: "{{ item.image | default(item) }}"

- name: Ensure local cache directory exists
  ansible.builtin.file:
    path: "{{ offline_images_cache_dir }}"
    state: directory
    mode: '0755'

- name: Verify Docker daemon is reachable
  ansible.builtin.command: docker info
  changed_when: false

- name: Gather existing archive information
  ansible.builtin.stat:
    path: "{{ offline_images_cache_dir | path_join(item.archive) }}"
  loop: "{{ offline_images_catalog }}"
  loop_control:
    label: "{{ item.image }}"
  register: offline_images_existing

- name: Combine catalog with archive state
  ansible.builtin.set_fact:
    offline_images_combined: >-
      {{ offline_images_catalog | zip(offline_images_existing.results) | list }}

- name: Reset manifest accumulator
  ansible.builtin.set_fact:
    offline_images_manifest_entries: []

- name: Pull Docker images when required
  community.docker.docker_image:
    name: "{{ item.0.image }}"
    source: pull
    force_source: "{{ offline_images_force_fetch | bool }}"
  loop: "{{ offline_images_combined }}"
  loop_control:
    label: "{{ item.0.image }}"
  when: (offline_images_force_fetch | bool) or (not item.1.stat.exists)
  tags:
    - skip_ansible_lint

- name: Save Docker images to cache
  ansible.builtin.command:
    cmd: >-
      docker image save --output
      {{ offline_images_cache_dir | path_join(item.0.archive) }}
      {{ item.0.image }}
  loop: "{{ offline_images_combined }}"
  loop_control:
    label: "{{ item.0.image }}"
  when: (offline_images_force_fetch | bool) or (not item.1.stat.exists)
  changed_when: true
  register: offline_images_save_results

- name: Collect archive checksums
  ansible.builtin.stat:
    path: "{{ offline_images_cache_dir | path_join(item.archive) }}"
    checksum_algorithm: sha256
  loop: "{{ offline_images_catalog }}"
  loop_control:
    label: "{{ item.archive }}"
  register: offline_images_checksum_stats

- name: Fail when expected archives are missing after fetch
  ansible.builtin.fail:
    msg: |-
      Cached archive {{ item.item.archive }} was not created in
      {{ offline_images_cache_dir }}. Re-run the fetch mode to populate
      the cache.
  when: not item.stat.exists
  loop: "{{ offline_images_checksum_stats.results }}"
  loop_control:
    label: "{{ item.item.archive }}"

- name: Accumulate manifest entries
  ansible.builtin.set_fact:
    offline_images_manifest_entries: >-
      {{ (offline_images_manifest_entries | default([])) + [
           {
             'image': item.item.image,
             'archive': item.item.archive,
             'checksum': item.stat.checksum
           }
         ] }}
  loop: "{{ offline_images_checksum_stats.results }}"
  loop_control:
    label: "{{ item.item.archive }}"

- name: Write manifest file
  ansible.builtin.copy:
    dest: "{{ offline_images_manifest_path }}"
    content: "{{ offline_images_manifest_entries | to_nice_json }}\n"
    mode: '0644'

- name: Write checksum sidecars
  ansible.builtin.copy:
    dest: >-
      {{ offline_images_cache_dir
         | path_join(item.item.archive ~ '.sha256') }}
    content: "{{ item.stat.checksum }}  {{ item.item.archive }}\n"
    mode: '0644'
  loop: "{{ offline_images_checksum_stats.results }}"
  loop_control:
    label: "{{ item.item.archive }}"

- name: Summarize fetch results
  ansible.builtin.set_fact:
    offline_images_fetch_summary:
      total: "{{ offline_images_catalog | length }}"
      saved: "{{ offline_images_save_results.results | default([])
        | rejectattr('skipped', 'defined') | list | length }}"
      skipped: "{{ offline_images_catalog | length
        - (offline_images_save_results.results | default([])
          | rejectattr('skipped', 'defined') | list | length) }}"

- name: Display fetch summary
  ansible.builtin.debug:
    msg: >-
      Images in catalog: {{ offline_images_fetch_summary.total }} | Saved:
      {{ offline_images_fetch_summary.saved }} | Skipped:
      {{ offline_images_fetch_summary.skipped }}
